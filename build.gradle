plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
}

group = mod_group_id
version = mod_version
base { archivesName = mod_id }

java { toolchain { languageVersion = JavaLanguageVersion.of(17) } }

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            jvmArgs '-Xms4G', '-Xmx4G',
                    '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
                    '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
                    '--add-opens=java.base/java.lang=ALL-UNNAMED',
                    '--add-opens=java.base/java.nio=ALL-UNNAMED',
                    '--add-opens=java.base/jdk.internal.ref=ALL-UNNAMED',
                    '--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED'

            mods { "${mod_id}" { source sourceSets.main } }
        }
        client { property 'forge.enabledGameTestNamespaces', mod_id }
        server { property 'forge.enabledGameTestNamespaces', mod_id; args '--nogui' }
        gameTestServer { property 'forge.enabledGameTestNamespaces', mod_id }
        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all',
                 '--output', file('src/generated/resources/'),
                 '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

/* Репозитории */
repositories {
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net" }
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // TIFF-ридер (ImageIO)
    compileOnly      "com.github.jai-imageio:jai-imageio-core:1.4.0"
    minecraftLibrary "com.github.jai-imageio:jai-imageio-core:1.4.0"

    // Jackson для RoadGenerator/BuildingGenerator
    def jacksonVer = '2.17.2'
    compileOnly      "com.fasterxml.jackson.core:jackson-core:${jacksonVer}"
    compileOnly      "com.fasterxml.jackson.core:jackson-annotations:${jacksonVer}"
    compileOnly      "com.fasterxml.jackson.core:jackson-databind:${jacksonVer}"
    minecraftLibrary "com.fasterxml.jackson.core:jackson-core:${jacksonVer}"
    minecraftLibrary "com.fasterxml.jackson.core:jackson-annotations:${jacksonVer}"
    minecraftLibrary "com.fasterxml.jackson.core:jackson-databind:${jacksonVer}"

    // ImageIO: TwelveMonkeys TIFF (нужны в рантайме!)
    minecraftLibrary "com.twelvemonkeys.imageio:imageio-core:3.10.1"
    minecraftLibrary "com.twelvemonkeys.imageio:imageio-metadata:3.10.1"
    minecraftLibrary "com.twelvemonkeys.imageio:imageio-tiff:3.10.1"

    // Guava только для компиляции (рантайм поставляет Minecraft)
    compileOnly "com.google.guava:guava:31.1-jre"
}

/* Никаких resolutionStrategy/exclude — они больше не нужны */

tasks.named('processResources', ProcessResources).configure {
    def replace = [
        minecraft_version       : minecraft_version,
        minecraft_version_range : minecraft_version_range,
        forge_version           : forge_version,
        forge_version_range     : forge_version_range,
        loader_version_range    : loader_version_range,
        mod_id                  : mod_id,
        mod_name                : mod_name,
        mod_license             : mod_license,
        mod_version             : mod_version,
        mod_authors             : mod_authors,
        mod_description         : mod_description,
    ]
    inputs.properties replace
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) { expand replace + [project: project] }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            'Specification-Title'     : mod_id,
            'Specification-Vendor'    : mod_authors,
            'Specification-Version'   : '1',
            'Implementation-Title'    : project.name,
            'Implementation-Version'  : project.jar.archiveVersion,
            'Implementation-Vendor'   : mod_authors,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications { register('mavenJava', MavenPublication) { artifact jar } }
    repositories { maven { url = "file://${project.projectDir}/mcmodsrepo" } }
}

tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }
